{"ast":null,"code":"var _jsxFileName = \"/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nimport 'materialize-css';\nimport { Button, Card, Row, Col, highlight } from 'react-materialize';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  redirect() {\n    if (!this.props.redirectURL) return console.log(\"redirect !\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tableWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, this.props.columnHearder.map((headerName, title) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 40\n        }\n      }, headerName);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/table/index.js"],"names":["React","Component","Button","Card","Row","Col","highlight","Table","constructor","props","redirect","redirectURL","console","log","render","columnHearder","map","headerName","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,SAAjC,QAAkD,mBAAlD;AAGA,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AACzCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,QAAI,CAAC,KAAKD,KAAL,CAAWE,WAAhB,EAA6B,OAAOC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP;AAChC;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWM,aAAX,CAAyBC,GAAzB,CAA6B,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACjD,0BAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,UAAjB,CAAP;AACH,KAFA,CADL,CADJ,CADJ,eAgEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhEJ,CAFJ,CADJ;AA2EH;;AAnFwC","sourcesContent":["import React, { Component } from 'react'\nimport 'materialize-css';\nimport { Button, Card, Row, Col, highlight } from 'react-materialize';\n\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n    }\n    redirect() {\n        if (!this.props.redirectURL) return console.log(\"redirect !\")\n    }\n    render() {\n        return (\n            <div className=\"tableWrapper\">\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {this.props.columnHearder.map((headerName, title) => {\n                                return <th key={title}>{headerName}</th>\n                            })}\n                        </tr>\n                    </thead>\n\n                    {/* <tbody>\n                        {this.props.rowData.map(dataRow => {\n                            console.log(dataRow)\n                            console.log(\"EXCEPTION STATUS  \",\n                                this.props.exceptionStatus);\n\n                            if (\n                                this.props.exceptionStatus[this.props.rowData.indexOf(dataRow)] === 0\n                                || this.props.exceptionStatus === 0\n                            ) {\n                            return (\n                                <tr\n                                    onClick={() => {\n                                            console.log(this.props.rowData.indexOf(dataRow));\n                                            if (\n                                                this.props.redirectURL == \"/test\"\n                                            ) {\n\n                                        return this.props.navigateRow(\n                                            console.log(\"in tsble if if\"),\n                                            dataRow[0], this.props.rowData.indexOf(dataRow)\n                                        );\n                                          }\n                                    }}\n                                >\n                                    {dataRow.map(tableCell => {\n\n                                        return console.log(\"in tsble if \"), <td>{tableCell}</td>\n                                    })}\n                                </tr>\n                            );\n                            } else {\n                                return (\n                                    <tr onClick={() => {\n                                        console.log(this.props.rowData.indexOf(dataRow));\n                                        if (\n                                            this.props.redirectURL == \"/test\"\n                                        ) {\n\n                                            return this.props.navigateRow(\n                                                console.log(\"in tsble if else\"),\n                                                dataRow[0], this.props.rowData.indexOf(dataRow)\n                                            );\n                                        }\n                                    }}\n                                    >\n                                        {dataRow.map(tableCell => {\n                                            return <td>{tableCell}</td>\n                                        })}\n                                </tr>\n                                    );\n                                }\n                        })}\n                    </tbody> */}\n\n                    <tbody>\n\n\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}