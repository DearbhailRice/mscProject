{"ast":null,"code":"var _jsxFileName = \"/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/test.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../components/navbar/index\";\nimport Table from \"../components/table/index\";\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // testArrayState: [],\n      columnHearder: [\"Id\", \"First Name\", \"Last Name\"],\n      rowData: [[]],\n      redirectURL: \"/test\",\n      currentPoID: \"\",\n      exceptionStatus: 0\n    };\n  }\n\n  componentWillMount() {\n    let testArray = [];\n    fetch(\"http://localhost:3001/test_select_all\").then(res => {\n      console.log(res.status);\n\n      if (res.status === 200) {\n        return res.json();\n      } // throw `Invalid Query`\n\n    }).then(dbres => {\n      testArray = dbres.map(item => {\n        return [item.test_id, item.first_name, item.second_name];\n      });\n      console.log(\"test array \" + JSON.stringify(testArray, null, 4));\n      this.setState({\n        //testArrayState: testArray,\n        rowData: testArray\n      });\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, console.log(\"on test page \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, Navbar, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.state.testArrayState), console.log(\"rowData test page\" + JSON.stringify(this.state.rowData)), /*#__PURE__*/React.createElement(Table, Object.assign({}, this.state, {\n      navigateRow: this.redirect.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  redirect(testId) {\n    this.props.history.push({\n      pathname: this.state.redirectURL\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/test.js"],"names":["React","Component","Navbar","Table","Test","constructor","props","state","columnHearder","rowData","redirectURL","currentPoID","exceptionStatus","componentWillMount","testArray","fetch","then","res","console","log","status","json","dbres","map","item","test_id","first_name","second_name","JSON","stringify","setState","catch","err","alert","render","testArrayState","redirect","bind","testId","history","push","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,YAAP,EAAqB,WAArB,CAFN;AAGTC,MAAAA,OAAO,EAAE,CAAC,EAAD,CAHA;AAITC,MAAAA,WAAW,EAAE,OAJJ;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,eAAe,EAAE;AANR,KAAb;AAQH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,SAAS,GAAG,EAAhB;AACAC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AAETC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;;AACA,UAAIH,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AAAE,eAAOH,GAAG,CAACI,IAAJ,EAAP;AAAoB,OAHrC,CAIT;;AACH,KANL,EAOKL,IAPL,CAOUM,KAAK,IAAI;AACXR,MAAAA,SAAS,GAAGQ,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAC1B,eAAO,CACHA,IAAI,CAACC,OADF,EAEHD,IAAI,CAACE,UAFF,EAGHF,IAAI,CAACG,WAHF,CAAP;AAKH,OANW,CAAZ;AAOAT,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBS,IAAI,CAACC,SAAL,CAAef,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAA5B;AAGA,WAAKgB,QAAL,CAAc;AAEV;AACArB,QAAAA,OAAO,EAAEK;AAHC,OAAd;AAKH,KAvBL,EAuBOiB,KAvBP,CAuBaC,GAAG,IAAI;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACH,KAzBL;AA0BH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKhB,OAAO,CAACC,GAAR,CAAY,eAAZ,CAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjB,MAAJ,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKK,KAAL,CAAW4B,cAAf,CAJJ,EAKKjB,OAAO,CAACC,GAAR,CAAY,sBAAsBS,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAAL,CAAWE,OAA1B,CAAlC,CALL,eAMI,oBAAC,KAAD,oBAAW,KAAKF,KAAhB;AAAuB,MAAA,WAAW,EAAE,KAAK6B,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ,CADJ;AAWH;;AACDD,EAAAA,QAAQ,CAACE,MAAD,EAAS;AACb,SAAKhC,KAAL,CAAWiC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,MAAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAWG;AADD,KAAxB;AAGH;;AA3DuC","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"../components/navbar/index\"\nimport Table from \"../components/table/index\";\n\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // testArrayState: [],\n            columnHearder: [\"Id\", \"First Name\", \"Last Name\"],\n            rowData: [[]],\n            redirectURL: \"/test\",\n            currentPoID: \"\",\n            exceptionStatus: 0\n        }\n    }\n\n    componentWillMount() {\n        let testArray = [];\n        fetch(\"http://localhost:3001/test_select_all\")\n            .then(res => {\n\n                console.log(res.status);\n                if (res.status === 200) { return res.json(); }\n                // throw `Invalid Query`\n            })\n            .then(dbres => {\n                testArray = dbres.map(item => {\n                    return [\n                        item.test_id,\n                        item.first_name,\n                        item.second_name\n                    ];\n                });\n                console.log(\"test array \" + JSON.stringify(testArray, null, 4));\n\n\n                this.setState({\n\n                    //testArrayState: testArray,\n                    rowData: testArray\n                })\n            }).catch(err => {\n                alert(err);\n            })\n    }\n    render() {\n        return (\n            <div className=\"test\">\n\n                {console.log(\"on test page \")}\n                <p>{Navbar} </p>\n                <p>{this.state.testArrayState}</p>\n                {console.log(\"rowData test page\" + JSON.stringify(this.state.rowData))}\n                <Table {...this.state} navigateRow={this.redirect.bind(this)} />\n                {/* <p>{new Table(this.state.testArrayState)}</p> */}\n            </div>\n        )\n    }\n    redirect(testId) {\n        this.props.history.push({\n            pathname: this.state.redirectURL\n        })\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}