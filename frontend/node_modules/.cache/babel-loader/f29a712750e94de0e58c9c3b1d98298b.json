{"ast":null,"code":"var _jsxFileName = \"/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/personalInfo/index.js\";\nimport React, { Component } from 'react';\nimport \"../../styles/personalInfo/personalInfo.scss\";\nexport default class PersonalInfo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  redirect() {\n    if (!this.props.redirectURL) return console.log(\"redirect !\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tableWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, console.log(\"coulmn array length \" + this.props.columnHearder.length), this.props.columnHearder.map((headerName, title) => {\n      {\n        this.props.rowData.map(dataRow => {\n          console.log(\"Data in row \" + JSON.stringify(dataRow));\n          console.log(\"array length\" + dataRow.length);\n          return dataRow.map(cellData => {\n            if (cellData == null) {\n              cellData = \" \";\n              return /*#__PURE__*/React.createElement(\"td\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 60\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                className: \"element\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 64\n                }\n              }, \" \", \" ---\"));\n            }\n\n            console.log(\"cell data      ---> \" + cellData);\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 56\n              }\n            }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n              className: \"element\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 61\n              }\n            }, \" \", cellData));\n          });\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        className: \"element\",\n        key: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 58\n        }\n      }, headerName)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 46\n        }\n      }, \" \", cellData)));\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dearb/Documents/msc_final_project/mscProjectCode/frontend/src/components/personalInfo/index.js"],"names":["React","Component","PersonalInfo","constructor","props","redirect","redirectURL","console","log","render","columnHearder","length","map","headerName","title","rowData","dataRow","JSON","stringify","cellData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6CAAP;AAGA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAChDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,QAAI,CAAC,KAAKD,KAAL,CAAWE,WAAhB,EAA6B,OAAOC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP;AAChC;;AACDC,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAkCI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKJ,KAAL,CAAWM,aAAX,CAAyBC,MAA9D,CADL,EAEK,KAAKP,KAAL,CAAWM,aAAX,CAAyBE,GAAzB,CAA6B,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACjD;AACI,aAAKV,KAAL,CAAWW,OAAX,CAAmBH,GAAnB,CAAuBI,OAAO,IAAI;AAE9BT,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBS,IAAI,CAACC,SAAL,CAAeF,OAAf,CAA7B;AAEAT,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBQ,OAAO,CAACL,MAArC;AACA,iBAAOK,OAAO,CAACJ,GAAR,CAAYO,QAAQ,IAAI;AAC3B,gBAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,cAAAA,QAAQ,GAAG,GAAX;AACA,kCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAI;AAAG,gBAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B,MAA1B,CAAJ,CAAP;AACH;;AACDZ,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBW,QAArC;AACA,gCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAK;AAAG,cAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0BA,QAA1B,CAAL,CAAP;AACH,WAPM,CAAP;AASH,SAdD;AAeH;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiB;AAAG,QAAA,SAAS,EAAC,SAAb;AAAuB,QAAA,GAAG,EAAEL,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCD,UAApC,CAAjB,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAK;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0BM,QAA1B,CAAL,CAFG,CAAP;AAIH,KAtBA,CAFL,CAlCJ,CADJ,CAFJ,CADJ,CAFJ;AA8FH;;AAvG+C","sourcesContent":["import React, { Component } from 'react'\nimport \"../../styles/personalInfo/personalInfo.scss\"\n\n\nexport default class PersonalInfo extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    redirect() {\n        if (!this.props.redirectURL) return console.log(\"redirect !\")\n    }\n    render() {\n        return (\n\n            <div className=\"tableWrapper\">\n                <table>\n\n                    <tbody>\n                        <tr>\n\n\n\n                            {/* \n\n                            {this.props.rowData.map(dataRow => {\n\n                                console.log(\"Data in row \" + JSON.stringify(dataRow));\n\n                                console.log(\"array length\" + dataRow.length);\n\n\n                                {\n                                    this.props.columnHearder.map((headerName, title) => {\n                                        return <tr><th scope=\"row\"> <p className=\"element\" key={title}>{headerName}</p></th></tr>\n                                    })\n                                }\n\n\n                                return dataRow.map(cellData => {\n                                    if (cellData == null) {\n                                        cellData = \" \";\n                                        return <td><p className=\"element\" > {\" ---\"}</p></td>\n                                    }\n                                    console.log(\"cell data      ---> \" + cellData)\n                                    return <td> <p className=\"element\" > {cellData}</p></td>\n                                }\n                                )\n                            })\n                            } */}\n\n\n\n                            <div className=\"title\">\n                                {console.log(\"coulmn array length \" + this.props.columnHearder.length)}\n                                {this.props.columnHearder.map((headerName, title) => {\n                                    {\n                                        this.props.rowData.map(dataRow => {\n\n                                            console.log(\"Data in row \" + JSON.stringify(dataRow));\n\n                                            console.log(\"array length\" + dataRow.length);\n                                            return dataRow.map(cellData => {\n                                                if (cellData == null) {\n                                                    cellData = \" \";\n                                                    return <td><p className=\"element\" > {\" ---\"}</p></td>\n                                                }\n                                                console.log(\"cell data      ---> \" + cellData)\n                                                return <td> <p className=\"element\" > {cellData}</p></td>\n                                            }\n                                            )\n                                        })\n                                    }\n                                    return <tr>\n                                        <th scope=\"row\"> <p className=\"element\" key={title}>{headerName}</p></th>\n                                        <td> <p className=\"element\" > {cellData}</p></td>\n                                    </tr>\n                                })}\n\n                            </div>\n\n                            {/* <div className=\"data\">\n                                <tr>\n                                    {this.props.rowData.map(dataRow => {\n\n                                        console.log(\"Data in row \" + JSON.stringify(dataRow));\n\n                                        console.log(\"array length\" + dataRow.length);\n                                        return dataRow.map(cellData => {\n                                            if (cellData == null) {\n                                                cellData = \" \";\n                                                return <td><p className=\"element\" > {\" ---\"}</p></td>\n                                            }\n                                            console.log(\"cell data      ---> \" + cellData)\n                                            return <td> <p className=\"element\" > {cellData}</p></td>\n                                        }\n                                        )\n                                    })}\n                                </tr>\n                            </div>*/}\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}